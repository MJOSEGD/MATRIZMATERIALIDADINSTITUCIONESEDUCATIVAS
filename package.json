const esgTopics = [
  // Environmental Topics
  { name: "Biodiversidad", category: "Environmental", esrs: "E4", ods: "15", kpi: "Área protegida (hectáreas)", taxonomy: "esrs_BiodiversityImpact" },
  { name: "Gestión del Agua", category: "Environmental", esrs: "E2", ods: "6", kpi: "Consumo de agua (m³)", taxonomy: "esrs_WaterResourceManagement" },
  { name: "Vertidos", category: "Environmental", esrs: "E3", ods: "14", kpi: "Reducción de vertidos (%)", taxonomy: "esrs_WasteDischarge" },
  { name: "Energía", category: "Environmental", esrs: "E1", ods: "7", kpi: "Consumo energético (MWh)", taxonomy: "esrs_EnergyConsumption" },
  { name: "Emisiones", category: "Environmental", esrs: "E5", ods: "13", kpi: "Reducción de emisiones CO₂ (%)", taxonomy: "esrs_EmissionsReduction" },
  { name: "Urbanización Sostenible", category: "Environmental", esrs: "E10", ods: "11", kpi: "Proyectos de urbanización sostenible", taxonomy: "esrs_SustainableUrbanization" },
  { name: "Construcción Ecológica y Gestión del Espacio", category: "Environmental", esrs: "E6", ods: "11", kpi: "Proyectos certificados LEED/BREEAM", taxonomy: "esrs_EcologicalConstruction" },
  { name: "Economía Circular", category: "Environmental", esrs: "E8", ods: "12", kpi: "Porcentaje de materiales reciclados", taxonomy: "esrs_CircularEconomy" },
  { name: "Consumo Responsable", category: "Environmental", esrs: "E11", ods: "12", kpi: "Uso de productos sostenibles (%)", taxonomy: "esrs_ResponsibleConsumption" },
  { name: "Gestión de Residuos", category: "Environmental", esrs: "E9", ods: "12", kpi: "Reducción de residuos generados (%)", taxonomy: "esrs_WasteManagement" },

  // Social Topics
  { name: "Derechos Humanos", category: "Social", esrs: "S1", ods: "8, 10", kpi: "Incidentes relacionados con DDHH", taxonomy: "esrs_HumanRights" },
  { name: "Innovación y Sostenibilidad en Desarrollo de Negocios", category: "Social", esrs: "S2", ods: "9", kpi: "Nuevas iniciativas sostenibles", taxonomy: "esrs_BusinessInnovation" },
  { name: "Índice de Salud y Bienestar Corporativo", category: "Social", esrs: "S3", ods: "3", kpi: "Índice de bienestar laboral", taxonomy: "esrs_HealthWellbeing" },
  { name: "Compromiso Corporativo con la Comunidad Local", category: "Social", esrs: "S4", ods: "11", kpi: "Proyectos de impacto comunitario", taxonomy: "esrs_CommunityEngagement" },
  { name: "Inclusión y Diversidad", category: "Social", esrs: "S5", ods: "5, 10", kpi: "Porcentaje de inclusión de género", taxonomy: "esrs_InclusionDiversity" },
  { name: "Privacidad, Seguridad y Protección de Datos", category: "Social", esrs: "S6", ods: "9", kpi: "Número de incidentes de seguridad", taxonomy: "esrs_DataSecurity" },
  { name: "Desarrollo Profesional y Entorno Laboral en Empresas", category: "Social", esrs: "S7", ods: "4, 8", kpi: "Horas de formación anual promedio", taxonomy: "esrs_ProfessionalDevelopment" },
  { name: "Inclusión Socioeconómica y Resiliencia Empresarial", category: "Social", esrs: "S8", ods: "1, 10", kpi: "Proyectos inclusivos implementados", taxonomy: "esrs_SocioEconomicInclusion" },
  { name: "Sostenibilidad Alimentaria y Nutricional", category: "Social", esrs: "S9", ods: "2", kpi: "Porcentaje de iniciativas de alimentación sostenible", taxonomy: "esrs_FoodSustainability" },

  // Governance Topics
  { name: "Gobernanza Institucional", category: "Governance", esrs: "G1", ods: "16", kpi: "Nivel de cumplimiento ético", taxonomy: "esrs_CorporateGovernance" },
  { name: "Participación de Stakeholders", category: "Governance", esrs: "G2", ods: "17", kpi: "Número de consultas a stakeholders", taxonomy: "esrs_StakeholderEngagement" },
  { name: "Transparencia e Integridad Corporativa", category: "Governance", esrs: "G3", ods: "16", kpi: "Índice de transparencia corporativa", taxonomy: "esrs_CorporateIntegrity" },
  { name: "Implementación de Estándares ESG", category: "Governance", esrs: "G4", ods: "12", kpi: "Certificaciones ESG obtenidas", taxonomy: "esrs_ESGStandards" },
  { name: "Gestión de Riesgos y Crisis", category: "Governance", esrs: "G5", ods: "16", kpi: "Efectividad de planes de gestión de crisis", taxonomy: "esrs_RiskManagement" },
  { name: "Innovación Digital y Ciberseguridad", category: "Governance", esrs: "G6", ods: "9", kpi: "Nivel de ciberseguridad implementado", taxonomy: "esrs_CyberSecurity" },
  { name: "Sostenibilidad Financiera", category: "Governance", esrs: "G7", ods: "8", kpi: "Rentabilidad sostenible (%)", taxonomy: "esrs_FinancialSustainability" },
  { name: "Matriz de Cumplimiento ESG", category: "Governance", esrs: "G8", ods: "12, 16", kpi: "Niveles de cumplimiento ESG", taxonomy: "esrs_ESGComplianceMatrix" }
];

let selectedTopic = null;
let chart = null;
const results = [];

// Función para asignar colores según la categoría ESG
function getCategoryColor(category) {
  if (category === "Environmental") return "#66CDAA"; // Verde agua
  if (category === "Social") return "#FFB347"; // Ocre claro
  if (category === "Governance") return "#87CEEB"; // Azul cielo
  return "#333333"; // Default
}

function filterTopics() {
  const category = document.getElementById("categoryFilter").value;
  const topicSelect = document.getElementById("topicSelect");
  topicSelect.innerHTML = '<option value="">Seleccione un tema</option>';

  esgTopics
    .filter((topic) => category === "All" || topic.category === category)
    .forEach((topic) => {
      const option = document.createElement("option");
      option.value = topic.name;
      option.textContent = topic.name;
      topicSelect.appendChild(option);
    });
}

function selectTopic() {
  const topicName = document.getElementById("topicSelect").value;
  selectedTopic = esgTopics.find((topic) => topic.name === topicName) || null;
}

function updateValues() {
  if (!selectedTopic) {
    alert("Por favor, selecciona un tema ESG.");
    return;
  }

  const puntuacion = parseInt(document.getElementById("score").value) || 0;
  const stakeholders = parseInt(document.getElementById("stakeholder").value) || 0;
  const riesgo = parseInt(document.getElementById("risk").value) || 0;

  document.getElementById("scoreDisplay").innerText = `${puntuacion}%`;
  document.getElementById("stakeholderDisplay").innerText = `${stakeholders}%`;
  document.getElementById("riskDisplay").innerText = `${riesgo}%`;

  const materiality = (puntuacion * 0.4 + stakeholders * 0.3 + riesgo * 0.3).toFixed(2);
  const financiero = ((puntuacion + riesgo) / 2).toFixed(2);

  const existing = results.find((r) => r.name === selectedTopic.name);
  if (existing) {
    Object.assign(existing, { puntuacion, stakeholders, riesgo, materiality, financiero });
  } else {
    results.push({ ...selectedTopic, puntuacion, stakeholders, riesgo, materiality, financiero });
  }

  updateChart();
  updateTable();
}

function updateChart() {
  const ctx = document.getElementById("matrixChart").getContext("2d");
  if (chart) chart.destroy();

  chart = new Chart(ctx, {
    type: "bubble",
    data: {
      datasets: results.map((r) => ({
        label: r.name,
        data: [{ x: r.financiero, y: r.puntuacion, r: r.stakeholders / 2 }],
        backgroundColor: getCategoryColor(r.category),
        borderColor: "#000",
        borderWidth: 1,
      })),
    },
    options: {
      responsive: true,
      plugins: {
        annotation: {
          annotations: {
            quadrantLow: {
              type: "box",
              xMin: 0,
              xMax: 50,
              yMin: 0,
              yMax: 50,
              backgroundColor: "rgba(173, 216, 230, 0.3)", // Azul claro
            },
            quadrantMediumLow: {
              type: "box",
              xMin: 50,
              xMax: 100,
              yMin: 0,
              yMax: 50,
              backgroundColor: "rgba(135, 206, 250, 0.3)", // Azul medio
            },
            quadrantMediumHigh: {
              type: "box",
              xMin: 0,
              xMax: 50,
              yMin: 50,
              yMax: 100,
              backgroundColor: "rgba(100, 149, 237, 0.3)", // Azul fuerte
            },
            quadrantHigh: {
              type: "box",
              xMin: 50,
              xMax: 100,
              yMin: 50,
              yMax: 100,
              backgroundColor: "rgba(65, 105, 225, 0.3)", // Azul oscuro
            },
          },
        },
        title: {
          display: true,
          text: "Matriz de Doble Materialidad ESG",
        },
      },
      scales: {
        x: { title: { display: true, text: "Impacto Financiero (%)" }, min: 0, max: 100 },
        y: { title: { display: true, text: "Impacto Socioambiental (%)" }, min: 0, max: 100 },
      },
    },
  });
}
const ctx = document.getElementById("matrixChart").getContext("2d");

// Función para obtener el color del cuadrante
function getQuadrantColor(x, y) {
  if (x <= 50 && y <= 50) return "rgba(173, 216, 230, 0.5)"; // Baja materialidad
  if (x > 50 && y <= 50) return "rgba(135, 206, 250, 0.5)"; // Media-Baja
  if (x <= 50 && y > 50) return "rgba(100, 149, 237, 0.5)"; // Media-Alta
  return "rgba(65, 105, 225, 0.5)"; // Alta
}

// Datos de ejemplo
const data = [
  { name: "Biodiversidad", x: 30, y: 40, r: 20, category: "Environmental" },
  { name: "Gestión del Agua", x: 70, y: 50, r: 30, category: "Environmental" },
  { name: "Derechos Humanos", x: 50, y: 60, r: 25, category: "Social" },
  { name: "Gobernanza Institucional", x: 90, y: 80, r: 35, category: "Governance" },
];

// Función para obtener el color según la categoría ESG
function getCategoryColor(category) {
  switch (category) {
    case "Environmental": return "#66cdaa";
    case "Social": return "#ffb347";
    case "Governance": return "#87ceeb";
    default: return "#aaa";
  }
}

// Crear el gráfico
const chart = new Chart(ctx, {
  type: "bubble",
  data: {
    datasets: data.map((d) => ({
      label: d.name,
      data: [{ x: d.x, y: d.y, r: d.r }],
      backgroundColor: getCategoryColor(d.category),
      borderColor: "#333",
      borderWidth: 1,
    })),
  },
  options: {
    responsive: true,
    plugins: {
      title: {
        display: true,
        text: "Matriz de Doble Materialidad ESG",
      },
      annotation: {
        annotations: {
          quadrantLow: {
            type: "box",
            xMin: 0,
            xMax: 50,
            yMin: 0,
            yMax: 50,
            backgroundColor: "rgba(173, 216, 230, 0.3)",
          },
          quadrantMediumLow: {
            type: "box",
            xMin: 50,
            xMax: 100,
            yMin: 0,
            yMax: 50,
            backgroundColor: "rgba(135, 206, 250, 0.3)",
          },
          quadrantMediumHigh: {
            type: "box",
            xMin: 0,
            xMax: 50,
            yMin: 50,
            yMax: 100,
            backgroundColor: "rgba(100, 149, 237, 0.3)",
          },
          quadrantHigh: {
            type: "box",
            xMin: 50,
            xMax: 100,
            yMin: 50,
            yMax: 100,
            backgroundColor: "rgba(65, 105, 225, 0.3)",
          },
        },
      },
    },
    scales: {
      x: {
        title: { display: true, text: "Impacto Financiero (%)" },
        min: 0,
        max: 100,
      },
      y: {
        title: { display: true, text: "Impacto Socioambiental (%)" },
        min: 0,
        max: 100,
      },
    },
  },
});

function updateTable() {
  const table = document.getElementById("resultsTable");
  table.innerHTML = results
    .map(
      (r) => `
      <tr>
        <td>${r.name}</td>
        <td>${r.category}</td>
        <td>${r.esrs}</td>
        <td>${r.ods}</td>
        <td>${r.kpi}</td>
        <td>${r.taxonomy}</td>
        <td>${r.puntuacion}%</td>
        <td>${r.financiero}%</td>
        <td>${r.stakeholders}%</td>
      </tr>
    `
    )
    .join("");
}

function downloadChart() {
  const link = document.createElement("a");
  link.href = chart.toBase64Image();
  link.download = "matriz_esg.png";
  link.click();
}

function downloadData() {
  const csv =
    "data:text/csv;charset=utf-8,Tema,Financiero,Socioambiental,Stakeholders\n" +
    results.map((r) => `${r.name},${r.financiero},${r.puntuacion},${r.stakeholders}`).join("\n");
  const link = document.createElement("a");
  link.href = encodeURI(csv);
  link.download = "datos_esg.csv";
  link.click();
}
// Actualizar el gráfico
function updateChart() {
  const ctx = document.getElementById("matrixChart").getContext("2d");

  if (chart) chart.destroy();

  chart = new Chart(ctx, {
    type: "bubble",
    data: {
      datasets: results.map((r) => ({
        label: r.name,
        data: [{ x: r.financiero, y: r.puntuacion, r: r.stakeholders }],
        backgroundColor: getCategoryColor(r.category),
        borderColor: "#333",
        borderWidth: 1,
      })),
    },
    options: {
      responsive: true,
      plugins: {
        title: {
          display: true,
          text: "Matriz de Doble Materialidad ESG",
          font: { size: 18 },
        },
      },
      scales: {
        x: { title: { display: true, text: "Impacto Financiero (%)" }, min: 0, max: 100 },
        y: { title: { display: true, text: "Impacto Socioambiental (%)" }, min: 0, max: 100 },
      },
      animation: false,
      plugins: [
        {
          id: "quadrantsBackground",
          beforeDraw: drawQuadrants, // Redibuja los cuadrantes
        },
      ],
    },
  });
}

// Actualizar valores
function updateValues() {
  const puntuacion = parseInt(document.getElementById("score").value) || 0;
  const stakeholders = parseInt(document.getElementById("stakeholder").value) || 0;
  const financiero = parseInt(document.getElementById("risk").value) || 0;

  document.getElementById("scoreDisplay").innerText = `${puntuacion}%`;
  document.getElementById("stakeholderDisplay").innerText = `${stakeholders}%`;
  document.getElementById("riskDisplay").innerText = `${financiero}%`;

  results[0] = {
    ...results[0],
    financiero: financiero,
    puntuacion: puntuacion,
    stakeholders: stakeholders,
  };

  updateChart();
}

document.addEventListener("DOMContentLoaded", updateChart);
